import { useState, useEffect, useRef, useCallback } from "react";

// ‚úÖ Hardcoded API Key (‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß - ‡∏Ñ‡∏ß‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÉ‡∏ä‡πâ environment variables ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏£‡∏¥‡∏á)
const GEMINI_API_KEY = "AIzaSyBprj3OSZ2AI5OQNvzvuLu25UFF1biCLJo";
const GEMINI_API_URL =
  "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent";

export const useChatLogic = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [isVisible, setIsVisible] = useState(false);
  const [messages, setMessages] = useState([]);
  const [inputMessage, setInputMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [showPetitionAlert, setShowPetitionAlert] = useState(false);
  // Data for course knowledge base
  const [courseCoEData, setCourseCoEData] = useState("");
  const [courseDMEData, setCourseDMEData] = useState("");

  const chatContentRef = useRef(null);
  const hasDisplayedWelcome = useRef(false);
  const hasFetchedData = useRef(false);
  const hasCheckedApiKey = useRef(false); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° ref ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key

  // --- Utility Functions ---

  const fetchCourseData = async (path, setData) => {
    try {
      console.log("Fetching course data from:", path);
      const response = await fetch(path);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status} from ${path}`);
      }
      const text = await response.text();
      console.log(`‚úÖ Successfully loaded data from ${path}`);
      setData(text);
    } catch (err) {
      console.error(`‚ùå Error loading course knowledge from ${path}:`, err);
    }
  };

  const formatAIResponse = useCallback((text) => {
    let formatted = text.replace(/\*\*(.+?)\*\*/g, "<strong>$1</strong>");
    const lines = formatted.split("\n");
    let inList = false;
    let result = [];

    for (let line of lines) {
      if (line.trim().startsWith("*") && !line.trim().startsWith("**")) {
        if (!inList) {
          result.push('<ul class="list-disc list-inside space-y-1 mt-2">');
          inList = true;
        }
        const content = line.trim().substring(1).trim();
        result.push(`<li>${content}</li>`);
      } else {
        if (inList) {
          result.push("</ul>");
          inList = false;
        }
        if (line.trim()) {
          result.push(`<p class="mb-2">${line}</p>`);
        }
      }
    }

    if (inList) result.push("</ul>");

    return result.join("");
  }, []);

  // --- Effects ---

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  useEffect(() => {
    if (!hasCheckedApiKey.current) {
      hasCheckedApiKey.current = true;
      
      console.log("üîç Checking API Key...");
      console.log("üìã All environment variables:", import.meta.env);
      
      if (!GEMINI_API_KEY) {
        console.error("‚ùå GEMINI_API_KEY is not defined!");
        console.error("‚ö†Ô∏è Chatbot will not work without API key!");
        console.log("üí° If deploying to GitHub Pages, make sure to:");
        console.log("   1. Add VITE_GEMINI_API_KEY to GitHub Secrets");
        console.log("   2. Update GitHub Actions workflow to inject the secret");
      } else {
        console.log("‚úÖ GEMINI_API_KEY loaded successfully");
        console.log("üîë API Key length:", GEMINI_API_KEY.length);
        console.log("üîë API Key preview:", GEMINI_API_KEY.substring(0, 10) + "...");
      }
    }
  }, []);

  // ‚úÖ Fetch course data - ‡∏£‡∏±‡∏ô‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
  useEffect(() => {
    if (!hasFetchedData.current) {
      hasFetchedData.current = true;
      const basePath = import.meta.env.BASE_URL;

      fetchCourseData(`${basePath}data/course_coe.txt`, setCourseCoEData);
      fetchCourseData(`${basePath}data/course_dme.txt`, setCourseDMEData);
    }
  }, []);

  // Effect to add initial AI welcome message
  useEffect(() => {
    if (!hasDisplayedWelcome.current) {
      setMessages([
        {
          sender: "ai",
          text: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÅ‡∏•‡∏∞ ‡∏™‡∏∑‡πà‡∏≠‡∏î‡∏¥‡∏à‡∏¥‡∏ï‡∏≠‡∏• ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?",
        },
      ]);
      hasDisplayedWelcome.current = true;
    }
  }, []);

  // Effect to scroll to bottom of chat content
  useEffect(() => {
    if (chatContentRef.current) {
      chatContentRef.current.scrollTop = chatContentRef.current.scrollHeight;
    }
  }, [messages]);

  // --- Chat Logic ---

  const toggleChat = () => {
    if (isOpen) {
      setIsOpen(false);
      setTimeout(() => setIsVisible(false), 300);
    } else {
      setIsVisible(true);
      setTimeout(() => setIsOpen(true), 10);
    }
  };

  const sendMessageToGemini = useCallback(
    async (text, currentMessages) => {
      if (!text.trim()) return;

      // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      if (!GEMINI_API_KEY) {
        console.error("‚ùå Cannot send message: API Key is not defined");
        setMessages((prev) => [
          ...prev,
          { sender: "user", text },
          { 
            sender: "ai", 
            text: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏û‡∏ö API Key ‡∏Ç‡∏≠‡∏á Gemini\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment variables (VITE_GEMINI_API_KEY)\n\n‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á deploy ‡∏ö‡∏ô GitHub Pages ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° Secret ‡πÉ‡∏ô GitHub Actions ‡πÅ‡∏•‡πâ‡∏ß" 
          }
        ]);
        return;
      }

      const lowerCaseText = text.toLowerCase();

      const PETITION_KEYWORDS = ["‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á", "‡∏¢‡∏∑‡πà‡∏ô ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á", "‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á", "‡∏Ç‡∏≠‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á","‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤","‡∏•‡∏≤‡∏û‡∏±‡∏Å","‡∏•‡∏≤‡∏ñ‡∏≠‡∏ô","‡∏Ç‡∏≠‡∏ñ‡∏≠‡∏ô","‡∏Ç‡∏≠‡∏•‡∏≤‡∏û‡∏±‡∏Å","‡∏¢‡∏∑‡πà‡∏ô‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤","‡∏¢‡∏∑‡πà‡∏ô‡∏•‡∏≤‡∏û‡∏±‡∏Å","‡∏¢‡∏∑‡πà‡∏ô‡∏ñ‡∏≠‡∏ô","‡∏ñ‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤"];
      const isPetitionRelated = PETITION_KEYWORDS.some(keyword => text.includes(keyword));

      if (isPetitionRelated) {
        setShowPetitionAlert(true);
      }
      
      const OVER_CREDIT_KEYWORDS = ["‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô", "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô", "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡πÄ‡∏Å‡∏¥‡∏ô", "‡πÄ‡∏Å‡∏¥‡∏ô 22", "‡πÄ‡∏Å‡∏¥‡∏ô 22 ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï", "‡∏•‡∏á‡πÄ‡∏Å‡∏¥‡∏ô"];
      const isOverCreditRelated = OVER_CREDIT_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));

      const REGRADE_KEYWORDS = ["‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î", "regrade", "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î", "‡∏Ç‡∏≠‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î", "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î"];
      const isRegradeRelated = REGRADE_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));

      const DROP_KEYWORDS = ["‡∏ñ‡∏≠‡∏ô", "‡∏ñ‡∏≠‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤"];
      const isDropRelated = DROP_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));
      
      const F_KEYWORDS = ["F", "f","‡πÄ‡∏Å‡∏£‡∏î F", "grade F"];
      const isFRelated = F_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));
      
      const isHonorWithdrawRelated = lowerCaseText.includes("‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°") && lowerCaseText.includes("‡∏ñ‡∏≠‡∏ô");

      const isHonorFRelated = lowerCaseText.includes("‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°") && lowerCaseText.includes("F");

      const PORTFOLIO_KEYWORDS = ["‡∏û‡∏≠‡∏£‡πå‡∏ó", "‡∏û‡∏≠‡∏£‡πå‡∏ï","Portfolio", "Port","‡∏£‡∏≠‡∏ö 1","‡∏£‡∏≠‡∏ö1","‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å"];
      const isPortfolioRelated = PORTFOLIO_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));
      
      const RANDOM_KEYWORDS = ["‡πÅ‡∏£‡∏ô‡∏î‡πâ‡∏≠‡∏°", "‡∏´‡∏•‡∏∏‡∏î","Random"];
      const isRandomRelated = RANDOM_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));

      const RESERVE_KEYWORDS = ["‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á", "‡∏™‡∏≥‡∏£‡∏≠‡∏á","Reserve"];
      const isReserveRelated = RESERVE_KEYWORDS.some(keyword => lowerCaseText.includes(keyword));

      setIsLoading(true);
      setMessages((prev) => [...prev, { sender: "user", text }]);
      setInputMessage("");

      const baseSystemInstruction =
        "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÅ‡∏•‡∏∞ ‡∏™‡∏∑‡πà‡∏≠‡∏î‡∏¥‡∏à‡∏¥‡∏ï‡∏≠‡∏• ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ";

      const isCourseOrTeacherRelated =
        lowerCaseText.includes("‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£") ||
        lowerCaseText.includes("‡∏ß‡∏¥‡∏ä‡∏≤") ||
        lowerCaseText.includes("‡∏Ñ‡∏ì‡∏∞") ||
        lowerCaseText.includes("‡πÄ‡∏£‡∏µ‡∏¢‡∏ô") ||
        lowerCaseText.includes("‡∏™‡∏≤‡∏Ç‡∏≤") ||
        lowerCaseText.includes("‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå") ||
        lowerCaseText.includes("‡∏î‡∏¥‡∏à‡∏¥‡∏ï‡∏≠‡∏•") ||
        lowerCaseText.includes("‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤") ||
        lowerCaseText.includes("‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå") ||
        lowerCaseText.includes("‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô") ||
        lowerCaseText.includes("‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå") ||
        lowerCaseText.includes("‡πÉ‡∏Ñ‡∏£‡∏™‡∏≠‡∏ô");

      let contextData = "";
      if ((courseCoEData || courseDMEData) && isCourseOrTeacherRelated) {
        contextData = `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô:
${courseCoEData ? `--- ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ---\n${courseCoEData}` : ""}
${courseDMEData ? `--- ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏• ---\n${courseDMEData}` : ""}
‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÅ‡∏ï‡πà‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£`;
      }

      let extraInstruction = '';

      if (isPetitionRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå https://req.kku.ac.th ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏à‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏™‡∏≤‡∏Ç‡∏≤ COE: CoE Students KKU, DME: Digital Media Engineering KKU"\n\n';
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå https://req.kku.ac.th ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏û‡∏±‡∏Å‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡πÇ‡∏î‡∏¢‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô 8 ‡∏õ‡∏µ ‡πÉ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏î‡πÜ‡∏Ç‡∏ì‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡πà‡∏ô‡∏•‡∏≤‡∏û‡∏±‡∏Å‡πÑ‡∏î‡πâ ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤"\n\n';
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏∑‡πà‡∏ô‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡∏•‡∏≤‡∏û‡∏±‡∏Å‡∏à‡∏∞‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡∏ï‡∏Å‡πà‡∏≠‡∏ô ‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏ß‡∏£‡∏£‡∏µ‡∏ö‡∏¢‡∏∑‡πà‡∏ô‡πÅ‡∏ï‡πà‡πÄ‡∏ô‡∏¥‡πà‡∏ô‡πÜ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏≤‡∏Å‡∏¢‡∏∑‡πà‡∏ô‡∏ä‡πâ‡∏≤"\n\n';
      }

      if (isOverCreditRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡πÄ‡∏Å‡∏¥‡∏ô: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö! ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï‡πÄ‡∏Å‡∏¥‡∏ô 22 ‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Å‡∏¥‡∏ï ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ç‡∏≠‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏±‡∏ö‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ì‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ"\n\n';
      }

      if (isRegradeRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡πÄ‡∏Å‡∏£‡∏î F, D ‡πÅ‡∏•‡∏∞ D+ ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î C ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
      }

      if (isDropRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡πÄ‡∏Å‡∏£‡∏î‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
      }

      if (isFRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏îF: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î F ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö (‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏™‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏Ñ) ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡πÑ‡∏î‡πâ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏£‡∏î‡∏¢‡∏±‡∏á‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ F ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏à‡∏ö ‡∏´‡∏≤‡∏Å‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ ‡πÉ‡∏ô‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏Å‡∏£‡∏î‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
      }

      if (isHonorFRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏îF: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏î F ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏û‡∏∂‡πà‡∏á‡∏ó‡πâ‡∏≠ ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏î‡∏π‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏îF: ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏ß‡πà‡∏≤ ‡∏ï‡∏¥‡∏î F ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏´‡∏°‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏¢‡πâ‡∏≥‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏ß‡πà‡∏≤ ‡∏´‡∏°‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°\n\n';
      }

      if (isHonorWithdrawRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏Ñ‡∏£‡∏±‡∏ö ‡πÉ‡∏î‡πÜ‡∏Å‡πá‡∏ï‡∏≤‡∏°‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏≤‡∏Å‡∏ï‡∏¥‡∏î F ‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÇ‡∏î‡∏¢‡∏ï‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏Å‡∏£‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏π‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏ï‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏Å‡∏£‡∏î‡∏à‡∏∞‡∏Ñ‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏£‡∏î‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
      }

      if (isPortfolioRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≠‡∏ö‡∏û‡∏≠‡∏£‡πå‡∏ï‡∏ü‡∏≠‡∏•‡∏¥‡πÇ‡∏≠: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏´‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏≠‡∏ö Portfolio ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå https://kku.world/porten69 ‡∏û‡∏≠‡∏£‡πå‡∏ó‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡∏ï‡∏£‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô"\n\n';
      }

      if (isRandomRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£random: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏ô‡∏î‡πâ‡∏≠‡∏°‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏•‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡∏•‡∏á‡∏™‡∏π‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏á‡πÉ‡∏ô‡πÄ‡∏ã‡∏Ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏•‡∏á‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏™‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å ‡∏à‡∏∂‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏ô‡∏î‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡πÅ‡∏Å‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö"\n\n';
      }

      if (isReserveRelated) {
        extraInstruction += '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏™‡∏≥‡∏£‡∏≠‡∏á: ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÉ‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏†‡∏≤‡∏Ñ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡πÄ‡∏ï‡πá‡∏°‡∏≠‡∏≤‡∏à‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡πà‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå https://req.kku.ac.th ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ß‡∏≤‡∏á‡πÑ‡∏ß‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á"\n\n';
      }

      const MAX_HISTORY_MESSAGES = 8;
      const historyForAPI = currentMessages
        .filter((msg) => msg.sender === "user" || msg.sender === "ai")
        .slice(Math.max(currentMessages.length - MAX_HISTORY_MESSAGES, 0))
        .map((msg) => ({
          role: msg.sender === "user" ? "user" : "model",
          parts: [{ text: msg.text }],
        }));

      const combinedUserPromptText = `${baseSystemInstruction}
${extraInstruction}${contextData ? `${contextData}\n\n` : ""}‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ${text}`;

      const contentsToSend = [
        ...historyForAPI,
        { role: "user", parts: [{ text: combinedUserPromptText }] },
      ];

      const MAX_RETRIES = 3;
      let attempts = 0;
      let success = false;
      let geminiResponse =
        "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠";

      while (attempts < MAX_RETRIES && !success) {
        attempts++;
        try {
          console.log(`üîÑ Attempt ${attempts} - Sending request to Gemini API...`);
          
          const response = await fetch(GEMINI_API_URL, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "X-goog-api-key": GEMINI_API_KEY,
            },
            body: JSON.stringify({
              contents: contentsToSend,
              safetySettings: [
                {
                  category: "HARM_CATEGORY_HARASSMENT",
                  threshold: "BLOCK_MEDIUM_AND_ABOVE",
                },
                {
                  category: "HARM_CATEGORY_HATE_SPEECH",
                  threshold: "BLOCK_MEDIUM_AND_ABOVE",
                },
                {
                  category: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
                  threshold: "BLOCK_MEDIUM_AND_ABOVE",
                },
                {
                  category: "HARM_CATEGORY_DANGEROUS_CONTENT",
                  threshold: "BLOCK_MEDIUM_AND_ABOVE",
                },
              ],
            }),
          });

          console.log(`üì° Response status: ${response.status}`);

          if (!response.ok) {
            if (response.status === 429 || response.status >= 500) {
              console.warn(
                `Attempt ${attempts} failed with status ${response.status}. Retrying...`
              );
              await new Promise((resolve) =>
                setTimeout(resolve, 1000 * attempts)
              );
              continue;
            }
            const errorText = await response.text();
            console.error(`API error response:`, errorText);
            throw new Error(
              `API error ${response.status}: ${errorText}`
            );
          }

          const data = await response.json();
          console.log("‚úÖ Received response from Gemini API");

          if (data.promptFeedback && data.promptFeedback.blockReason) {
            geminiResponse = `‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á AI: ${data.promptFeedback.blockReason}`;
          } else if (data.candidates?.[0]?.finishReason === "SAFETY") {
            geminiResponse = "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á AI ‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢";
          } else {
            geminiResponse =
              data.candidates?.[0]?.content?.parts?.[0]?.text ||
              "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å AI ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
          }
          success = true;
        } catch (error) {
          console.error(`‚ùå Attempt ${attempts} failed:`, error);
          if (attempts === MAX_RETRIES) {
            let errorMsg = `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö AI`;
            
            if (error.message.includes('API key')) {
              errorMsg += '\n\nüîë ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: API Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ API Key ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ';
            } else if (error.message.includes('Failed to fetch')) {
              errorMsg += '\n\nüåê ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï';
            } else if (error.message.includes('400')) {
              errorMsg += '\n\n‚ö†Ô∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞ API Key ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á';
            } else {
              errorMsg += `\n\nüìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${error.message}`;
            }
            
            geminiResponse = errorMsg;
          }
          await new Promise((resolve) => setTimeout(resolve, 1000 * attempts));
        }
      }

      setMessages((prev) => [...prev, { sender: "ai", text: geminiResponse }]);
      setIsLoading(false);
    },
    [courseCoEData, courseDMEData]
  );

  const handleSendMessage = () => {
    if (inputMessage.trim() && !isLoading) {
      sendMessageToGemini(inputMessage, messages);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === "Enter") {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const showInitialWelcomeUI =
    messages.length === 1 && messages[0].sender === "ai";

  return {
    isOpen,
    isVisible,
    messages,
    inputMessage,
    isLoading,
    chatContentRef,
    toggleChat,
    setInputMessage,
    handleSendMessage,
    handleKeyPress,
    formatAIResponse,
    showInitialWelcomeUI,
    setMessages,
    showPetitionAlert,
    setShowPetitionAlert
  };
};